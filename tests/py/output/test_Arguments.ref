Testing for TestInt : 12 
Testing for TestDouble : 2.300000 
Testing for TestVectorInt : 1 2 3 
Testing for TestVectorDouble : 1.100000 2.200000 3.300000 
Testing for TestString : my_String 
Testing for TestVectorString : 
m y _ S t r i n g 
Testing for TestVectorString : 
my_String1 my_String2 my_String3 
Testing for TestVectorVectorInt : 
[1][1] : 2 
[2][1] : 3 
[1][2] : 1 
[2][2] : 5 

Testing for TestVectorVectorDouble : 
[1][1] : 2.000000 
[2][1] : 3.000000 
[1][2] : 1.000000 
[2][2] : 5.000000 

Testing for TestVectorString : 
toto titi 
None
Testing for TestVectorInt : 12 13 
[12 13]

Testing for TestVectorDouble : 12.000000 13.000000 
[12 13]

Testing for TestInt : NA 
Testing for TestDouble : NA 
Testing for TestVectorInt : NA 
Testing for TestVectorDouble : NA 
Testing for TestInt (Overload) : 12 
Testing for TestVectorInt (Overload) : 21 32 
Testing for TestDouble (Overload) : 2.000000 
Testing for TestVectorDouble (Overload) : 2.000000 3.000000 
Testing for TestString (Overload) : my_String 
Testing for TestVectorString (Overload) : my_String1 my_String2 my_String3 
Case : Value = 2 - Descr = Enum test case 2
Testing for ReturnInt : 12 
12
Testing for ReturnInt : NA 
nan
Testing for ReturnDouble : 21.400000 
21.4
Testing for ReturnDouble : NA 
nan
Testing for ReturnVectorDouble : 1.000000 2.000000 3.000000 
[1. 2. 3.]
Testing for ReturnVectorInt : 3 2 8 
[3 2 8]
Testing for ReturnVectorVectorInt : 
[1][1] : 1 
[2][1] : 2 
[1][2] : 3 
[2][2] : 4 

[[1 2]
 [3 4]]
Testing for ReturnVectorVectorDouble : 
[1][1] : 1.000000 
[2][1] : 2.000000 
[1][2] : 3.000000 
[2][2] : 4.000000 

[[1. 2.]
 [3. 4.]]
Testing for ReturnVectorVectorInt : 
[1][1] : 5 
[2][1] : 6 

[[5 6]]
Testing for ReturnVectorVectorDouble : 
[1][1] : 5.000000 
[2][1] : 6.000000 

[[5. 6.]]
Integer = -1 - Real = -1.100000 - String = NA
Integer = 2 - Real = -1.100000 - String = NA
Testing for DefTestInt : 2 
Testing for DefTestDouble : 2.000000 
Testing for DefTestString : Default String 
Testing for DefTestVectorInt : Found an empty argument. This is correct
Testing for DefTestVectorDouble : Found an empty argument. This is correct
Testing for DefTestVectorString : Found an empty argument. This is correct
Testing for DefTestVectorVectorInt : Found an empty argument. This is correct
Testing for DefTestVectorVectorDouble : Found an empty argument. This is correct
Testing for DefTestVectorInt : Found an empty argument. This is correct
Testing for DefTestVectorDouble : Found an empty argument. This is correct
Testing for DefTestVectorString : Found an empty argument. This is correct
Testing for DefTestVectorVectorInt : Found an empty argument. This is correct
Testing for DefTestVectorVectorDouble : Found an empty argument. This is correct
- Number of rows    = 3
- Number of columns = 2
               [,  0]    [,  1]
     [  0,]     1.000     4.000
     [  1,]     2.000     5.000
     [  2,]     3.000     6.000
The Matrix should be square
Loading is not performed
The Matrix should be square and symmetric
Loading is not performed
- Number of rows    = 3
- Number of columns = 3
               [,  0]    [,  1]    [,  2]
     [  0,]     1.000     4.000     7.000
     [  1,]     2.000     5.000     8.000
     [  2,]     3.000     6.000     9.000
The Matrix should be square and symmetric
Loading is not performed
- Number of rows    = 3
- Number of columns = 3
               [,  0]    [,  1]    [,  2]
     [  0,]     1.000     2.000     3.000
     [  1,]     2.000     1.000     2.000
     [  2,]     3.000     2.000     1.000
- Number of rows    = 5
- Number of columns = 6
- Sparse Format
               [,  0]    [,  1]    [,  2]    [,  3]    [,  4]    [,  5]
     [  0,]     4.000         .     9.000         .         .         .
     [  1,]     2.000     7.000         .         .         .         .
     [  2,]         .         .         .         .         .         .
     [  3,]         .         .         .     5.000         .         .
     [  4,]         .         .         .         .         .         .

Test successfully performed
